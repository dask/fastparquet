name: PyPi wheels

on: [push, pull_request]


jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/0.')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-latest]
        architecture: ['x64']
        linux_archs: ["auto"]
        include:
          # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
          - os: windows-2019
            skip: "*2*win* *win32 pp*"
          - os: ubuntu-20.04
            linux_archs: aarch64
            skip: "pp*"
          - os: ubuntu-20.04
            linux_archs: auto
            skip: "pp*"
          - os: macos-latest
            skip: "pp*"

    name: Python ${{ matrix.os }}
    env:
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      CIBW_BEFORE_ALL: "pip install numpy cython"
      CIBW_SKIP: ${{ matrix.skip }}
      CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
      CIBW_ARCHS_MACOS: x86_64 universal2
      CIBW_TEST_SKIP: "*"

    steps:
        - uses: actions/checkout@v2

        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: "3.8"

        - name: Set up QEMU
          if: runner.os == 'Linux'
          uses: docker/setup-qemu-action@v1
          with:
            platforms: all

        - name: Add msbuild to PATH
          if: runner.os == 'Windows'
          uses: microsoft/setup-msbuild@v1.0.2

        - name: delvewheel install
          if: runner.os == 'Windows'
          run: |
            python -m pip install delvewheel==0.0.9 cython

        - name: Build wheels
          uses: joerick/cibuildwheel@v1.9.0

        - uses: actions/upload-artifact@v2
          with:
            path: ./wheelhouse/*.whl
            name: wheels
